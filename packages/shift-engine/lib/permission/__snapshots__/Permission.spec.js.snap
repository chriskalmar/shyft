// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Permission isPermission should recognize non-Permission objects 1`] = `"Not a Permission object"`;

exports[`Permission lookup permissions should reject if entity is missing 1`] = `"Permission type 'lookup' expects an entity"`;

exports[`Permission lookup permissions should reject if lookupMap is missing 1`] = `"Permission type 'lookup' expects a lookupMap"`;

exports[`Permission userAttribute permissions should reject if attribute name is missing 1`] = `"Permission type 'userAttribute' expects an attribute name"`;

exports[`Permission userAttribute permissions should reject if duplicate attribute names are provided 1`] = `"Duplicate attribute name 'profile' for permission type 'userAttribute'"`;

exports[`Permission permission attributes should reject if userAttribute is not a reference to the user entity 1`] = `"Cannot use attribute 'any' in 'City.permissions' as 'userAttribute' as it is not a reference to the User entity"`;

exports[`Permission permission attributes should reject if userAttribute is not a reference to the user entity 2`] = `"Cannot use attribute 'cityName' in 'City.permissions' as 'userAttribute' as it is not a reference to the User entity"`;

exports[`Permission permission attributes should reject if userAttribute is not a reference to the user entity 3`] = `"Cannot use attribute 'city' in 'User.permissions' as 'userAttribute' as it is not a reference to the User entity"`;

exports[`Permission permissions check simple should reject if non-Permission object is provided 1`] = `"checkPermissionSimple needs a valid permission object"`;

exports[`Permission permissions check simple should reject if user roles are not provided as an array 1`] = `"checkPermissionSimple needs a valid list of assigned user roles"`;

exports[`Permission permissions description should reject if non-Permission object is provided 1`] = `"generatePermissionDescription needs a valid permission object"`;

exports[`Permission processEntityPermissions should throw if permissions are assigned to unknown mutations 1`] = `"Unknown mutation 'noSuchMutation' used for permissions in entity 'SomeEntityName'"`;

exports[`Permission processEntityPermissions should throw if permissions have invalid attributes defined 1`] = `"Cannot use attribute 'someAttribute' in 'SomeEntityName.permissions' as 'userAttribute' as it is not a reference to the User entity"`;

exports[`Permission processEntityPermissions should throw if permissions have unknown attributes defined 1`] = `"Cannot use attribute 'notHere' in 'SomeEntityName.permissions' for 'read' as it does not exist"`;

exports[`Permission processEntityPermissions should throw if permissions have unknown attributes defined 2`] = `"Cannot use attribute 'notHere' in 'SomeEntityName.permissions' for 'find' as it does not exist"`;

exports[`Permission processEntityPermissions should throw if permissions have unknown attributes defined 3`] = `"Cannot use attribute 'notHere' in 'SomeEntityName.permissions' for 'update' as it does not exist"`;

exports[`Permission processEntityPermissions should throw if provided with an invalid map of mutation permissions 1`] = `"Entity 'SomeEntityName' permissions definition for mutations needs to be a map of mutations and permissions"`;

exports[`Permission processEntityPermissions should throw if provided with an invalid map of permissions 1`] = `"Entity 'SomeEntityName' permissions definition needs to be an object"`;

exports[`Permission processEntityPermissions should throw if provided with an invalid permissions 1`] = `"Invalid 'read' permission definition for entity 'SomeEntityName'"`;

exports[`Permission processEntityPermissions should throw if provided with an invalid permissions 2`] = `"Invalid 'find' permission definition for entity 'SomeEntityName'"`;

exports[`Permission processEntityPermissions should throw if provided with an invalid permissions 3`] = `"Invalid mutation permission definition for entity 'SomeEntityName' at position '0'"`;

exports[`Permission role permissions should reject if duplicate roles are provided 1`] = `"Duplicate role 'manager' for permission type 'role'"`;

exports[`Permission role permissions should reject if role name is missing 1`] = `"Permission type 'role' expects an role name"`;

exports[`Permission should reject incompatible permission types 1`] = `"Permission type 'everyone' is incompatible with other types"`;

exports[`Permission should reject incompatible permission types 2`] = `"Permission type 'authenticated' is incompatible with other types"`;

exports[`Permission should reject incompatible permission types 3`] = `"Permission type 'authenticated' is incompatible with other types"`;

exports[`Permission value permissions should reject if attribute name is missing 1`] = `"Permission type 'value' expects an attribute name"`;

exports[`Permission value permissions should reject if value is missing 1`] = `"Permission type 'value' expects a value"`;
